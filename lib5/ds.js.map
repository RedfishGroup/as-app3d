{"version":3,"sources":["../apps/ds.js"],"names":[],"mappings":"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","file":"ds.js","sourcesContent":["/* eslint no-console: 0 */\n\n// Import the lib/ mmodules\n\nimport OofA from './OofA.js'\nimport DataSet from './DataSet.js'\nimport util from './util.js'\nimport LZMA from 'node_modules/lzma/src/lzma_worker.js'\nimport pako from 'node_modules/pako/dist/pako.js'\n\nutil.copyTo(window, { DataSet, util, OofA, LZMA, pako })\n\n// Tests for lib/ modules. Replace eventually with testing libraries.\n\nconst ds = new DataSet(2, 3, new Uint8Array([0, 1, 2, 3, 4, 5]))\nconsole.log('ds', ds, 'data', ds.data)\n\nconst ctx = ds.toContext()\nconst id = util.ctxToImageData(ctx)\nconsole.log('to context image data', id.data)\n\nconst du = util.ctxToDataUrl(ctx)\nconst ctx1 = util.createCtx(ctx.canvas.width, ctx.canvas.height)\nctx1.drawImage(ctx.canvas, 0, 0)\nconst du1 = util.ctxToDataUrl(ctx1)\nconsole.log('du === du1', du === du1)\n\nconst ds22 = new DataSet(2, 2, [20, 21, 22, 23])\nconsole.log('ds22', ds22.data)\nconst ds33 = new DataSet(3, 3, [30, 31, 32, 33, 34, 35, 36, 37, 38])\nconsole.log('ds33', ds33.data)\nconst [dseast, dssouth] = [ds.concatEast(ds33), ds.concatSouth(ds22)]\nconsole.log('ds.concatEast(ds33)', dseast)\nconsole.log('ds.concatSouth(ds22)', dssouth)\n\nconst ds10f = ds.resample(10, 10, false, Float32Array)\nconsole.log('resample ds 10x10 (floats trimmed)', util.fixedArray(ds10f.data))\nconst ds10i = new Uint8Array(ds10f.data.buffer)\n\nutil.copyTo(window,\n  { ds, du, ctx, ds22, ds33, dseast, dssouth, ds10f, ds10i })\n\n// const deflate = new pako.Deflate({ level: 3 })\n// deflate.push(ds10i, true)\n// const ds10d = deflate.result\n// const inflate = new pako.Inflate({ level: 3 })\n// inflate.push(ds10d, true)\n// const ds10di = inflate.result\n//\n// util.copyTo(window, { ds10d, ds10di })\n\n// const tiler = ds.resample(256, 256, false, Float32Array)\n// https://github.com/nmrugg/LZMA-JS\n// https://github.com/nodeca/pako\nconst useLZMA = false\n// const deflate = new pako.Deflate({ level: 3 })\n// const inflate = new pako.Inflate({ level: 3 })\nconst popts = { level: 9 } // 0-9\nconst lmode = 9\n// let tiler = util.randomArray(256 * 256, 0, 1000, Uint32Array)\nlet tiler = util.randomArray(256 * 256, 0, 1000, Float32Array)\ntiler = util.fixedArray(tiler, 2)\ntiler = new DataSet(256, 256, tiler)\nconsole.log('random 256x256 dataset', util.fixedArray(tiler.data))\nconst tilei = new Uint8Array(tiler.data.buffer)\nconsole.log('.. as Uint8Array', tilei)\nconst tc = useLZMA ? LZMA.compress(tilei, lmode) : pako.deflate(tilei, popts)\n// const td = LZMA.decompress(tc)\nconst td = useLZMA ? LZMA.decompress(tc) : pako.inflate(tc)\nconst percent = 100 * util.fixed(tc.length / td.length)\nconsole.log(useLZMA ? 'LZMA' : 'Pako', 'compression',\n  td.length, '->', tc.length, percent, '%')\n\nutil.copyTo(window, { tiler, tilei, tc, td })\n\nconsole.log('decompressed ints === int view onto dataset?',\n  util.aPairEq(tilei, td))\nconst tdi = new Uint8Array(td)\nconst tdif = new tiler.data.constructor(tdi.buffer)\nconsole.log('decompressed floats === dataset.data?',\n  util.aPairEq(tiler.data, tdif))\nconst tdifs = util.clone(tdif).sort((a, b) => a - b)\nconst tdu = util.uniq(tdifs)\nconsole.log('sorted floats', util.fixedArray(tdifs, 6))\nconsole.log('unique?', tdu.length === tdif.length, util.fixedArray(tdu))\nconsole.log('    ', tdif.length, '->', tdu.length)\n\nutil.copyTo(window, { tdi, tdif, tdifs, tdu })\n\nconst t64 = tiler.toDataUrl()\nconsole.log('t64 length', t64.length)\nconst t64c = useLZMA ? LZMA.compress(tilei, lmode) : pako.deflate(tilei, popts)\n\nutil.copyTo(window, { t64, t64c })\n"]}