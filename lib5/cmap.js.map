{"version":3,"sources":["../apps/cmap.js"],"names":[],"mappings":"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","file":"cmap.js","sourcesContent":["/* eslint no-console: 0 */\n\n// Import the lib/ mmodules via relative paths\nimport Color from './Color.js'\nimport ColorMap from './ColorMap.js'\nimport util from './util.js'\n\nutil.copyTo(window, { util, Color, ColorMap })\nvar { util: u, Color: c, ColorMap: cmap } = { util, Color, ColorMap }\nutil.copyTo(window, { u, c, cmap })\n\nconsole.log('util, Color, ColorMap')\nconsole.log('u, c, cmap')\n\nconst tc = Color.typedColor(255, 0, 0)\nconsole.log('typedColor tc: color', tc.toString(), 'string', tc.getString(), 'pixel', tc.getPixel())\n\nconst tcstr = Color.toTypedColor('red')\nconst tcpix = Color.toTypedColor(4278190335) // red\nconst tca = Color.toTypedColor([255, 0, 0])\nconst tcta = Color.toTypedColor(new Uint8Array([255, 0, 0, 255]))\n\nconsole.log('toTypedColor: tcstr, tcpix, tca, tcta',\n  tcstr.toString(), tcpix.toString(), tca.toString(), tcta.toString())\nutil.copyTo(window, { tc, tcstr, tcpix, tca, tcta })\n\n// util.step(10, 2, (i) => console.log(i))\nconst gid = cmap.gradientImageData(10, ['red', 'green'])\nconsole.log('gradientImageData', gid)\n\nconst gic = cmap.typedArrayToTypedColors(gid)\nconsole.log('gradientImageColors', util.arraysToString(gic))\n\nconst c0 = gic[0]\nconsole.log('color0', c0, c0.getPixel(), c0.getString())\n\nconst rgbs = cmap.permuteRGBColors(2, 2, 3)\nconsole.log('permuteRGBColors(2,2,3)', util.arraysToString(rgbs))\nconsole.log('permuteRGBColors length)', rgbs.length)\n\nconst trgbs = cmap.arraysToColors(rgbs)\nconsole.log('arraysToColors', util.arraysToString(trgbs))\n\nconst basicmap = cmap.basicColorMap(rgbs)\nconsole.log('basicmap', basicmap.toString())\nconsole.log('basicmap prototypes'); util.pps(basicmap)\nconst basicmap0 = basicmap[0]\nconsole.log('basicmap[0] prototypes', basicmap0); util.pps(basicmap0)\n\nconsole.log('lookup basicmap[5]', basicmap.lookup(basicmap[5]))\nbasicmap.createIndex()\nconsole.log('lookup basicmap[5] w/ index', basicmap.lookup(basicmap[5]))\n\nconsole.log('random color', basicmap.randomColor())\n\nconsole.log('scaleColor(i, 0, 5) for i in [0, 5]')\nutil.repeat(6, (i) => {\n  const c = basicmap.scaleColor(i, 0, 5)\n  const ix = basicmap.lookup(c)\n  console.log('c', c, 'i', i, 'ix', ix)\n})\n\nconst webglArray = basicmap.webglArray()\nconsole.log('webglArray', webglArray)\n\nconst graymap = cmap.grayColorMap(16)\nconsole.log('graymap(16)', graymap.toString())\n\nconst rgbcube = cmap.rgbColorCube(4, 4, 2)\nconsole.log('rgbcube(4,4,2)', rgbcube.toString())\n\nconst rgbmap = cmap.rgbColorMap([100, 200, 300], [255], [128, 255])\nconsole.log('rgbmap([100,200,300],[255],[128,255])', rgbmap.toString())\n\nconst hslmap = cmap.hslColorMap(util.aIntRamp(0, 350, 25))\nconsole.log('hslColorMap(util.aIntRamp(0, 350, 100))', hslmap.toString())\n\nconst gradientmap = cmap.gradientColorMap(50, cmap.jetColors)\nconsole.log('cmap.jetColors:', util.arraysToString(cmap.jetColors))\nconsole.log('gradientColorMap(50, cmap.jetColors)', gradientmap.toString())\n\nconst redorange = cmap.gradientColorMap(11, ['red', 'blue'])\nconsole.log('red-blue gradient', redorange.toString())\nconst nlred = cmap.gradientColorMap(11, ['black', 'red', 'white'])\nconsole.log('NetLogo red ramp', nlred.toString())\n\nconst cssmap = cmap.cssColorMap(cmap.basicColorNames)\nconsole.log('cssmap(basicColorNames)', cssmap.toString())\n\nutil.copyTo(window, { gid, gic, c0, rgbs, trgbs, basicmap, basicmap0, webglArray, graymap, rgbcube, rgbmap, hslmap, gradientmap, redorange, cssmap })\n\nutil.repeat(5, (i) => {\n  const r = c.randomTypedColor()\n  const rc = rgbcube.rgbClosestColor(...r)\n  console.log(i, r.toString(), rc.toString())\n})\n"]}