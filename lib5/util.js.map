{"version":3,"sources":["../src/util.js"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["// A set of useful misc utils which will eventually move to individual modules.\nconst util = {\n\n  // ### Types ###\n\n  // Fixing the javascript [typeof operator](https://goo.gl/Efdzk5)\n  typeOf: (obj) => ({}).toString.call(obj).match(/\\s(\\w+)/)[1].toLowerCase(),\n  // Is obj Array or Object (but not typed array)?\n  isAorO: (obj) => ['array', 'object'].indexOf(util.typeOf(obj)) >= 0,\n  // Is obj TypedArray? If obj.buffer not present, works .. type is 'undefined'\n  isTypedArray: (obj) => util.typeOf(obj.buffer) === 'arraybuffer',\n  // Is a number an integer (rather than a float w/ non-zero fractional part)\n  isInteger: Number.isInteger || ((num) => Math.floor(num) === num),\n  // Check [big/little endian](https://en.wikipedia.org/wiki/Endianness)\n  isLittleEndian () {\n    const d32 = new Uint32Array([0x01020304])\n    return (new Uint8ClampedArray(d32.buffer))[0] === 4\n  },\n\n  // Throw an error with string.\n  // Use instead of `throw message` for better debugging\n  error: (message) => { throw new Error(message) },\n\n  // Return identity fcn, returning its argument unchanged. Used in callbacks\n  identity: (o) => o,\n  // Return function returning an object's property.  Property in fcn closure.\n  propFcn: (prop) => (o) => o[prop],\n\n  // Convert Array or TypedArray to given Type (Array or TypedArray).\n  // If array is already of correct type, return it unmodified\n  convertArray (array, Type) {\n    const Type0 = array.constructor\n    if (Type0 === Type) return array // return array if already same Type\n    if (Type !== Array) return new Type(array) // TypedArray: universal ctor\n    return Array.prototype.slice.call(array) // Convert TypedArray to Array\n  },\n\n  // ### Debug ###\n\n  // Use chrome/ffox/ie console.time()/timeEnd() performance functions\n  timeit (f, runs = 1e5, name = 'test') {\n    console.time(name) // eslint-disable-line\n    for (let i = 0; i < runs; i++) f(i)\n    console.timeEnd(name) // eslint-disable-line\n  },\n\n  // Print Prototype Stack\n  pps (obj, title = '') {\n    if (title) console.log(title)   // eslint-disable-line\n    let count = 1\n    let str = ''\n    while (obj) {\n      if (typeof obj === 'function') {\n        str = obj.constructor.toString()\n      } else {\n        let okeys = Object.keys(obj)\n        str = okeys.length > 0 ? // eslint-disable-line\n          `[${okeys.join(', ')}]` : `[${obj.constructor.name}]`\n      }\n      console.log(`[${count++}]: ${str}`)   // eslint-disable-line\n      obj = Object.getPrototypeOf(obj)\n    }\n  },\n\n  arraysToString (arrays) {\n    let str = ''\n    this.repeat(arrays.length, (i) => { str += `[${arrays[i]}]` })\n    return str\n  },\n\n  // ### HTML, CSS, DOM ###\n  parseQueryString () {\n    const results = {}\n    const query = document.location.search.substring(1)\n    query.split('&').forEach((s) => {\n      const param = s.split('=')\n      results[param[0]] = (param.length === 1) ? true : param[1]\n    })\n    return results\n  },\n\n  setScript (path) {\n    const scriptTag = document.createElement('script')\n    scriptTag.src = path\n    document.querySelector('head').appendChild(scriptTag)\n  },\n\n  // ### Math ###\n\n  // Return random int/float in [0,max) or [min,max) or [-r/2,r/2)\n  randomInt: (max) => Math.floor(Math.random() * max),\n  randomInt2: (min, max) => min + Math.floor(Math.random() * (max - min)),\n  randomFloat: (max) => Math.random() * max,\n  randomFloat2: (min, max) => min + Math.random() * (max - min),\n  randomCentered: (r) => util.randomFloat2(-r / 2, r / 2),\n\n  // Return float Gaussian normal with given mean, std deviation.\n  randomNormal (mean = 0.0, sigma = 1.0) { // Box-Muller\n    const [u1, u2] = [1.0 - Math.random(), Math.random()] // ui in 0,1\n    const norm = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(2.0 * Math.PI * u2)\n    return norm * sigma + mean\n  },\n\n  // Return whether num is [Power of Two](http://goo.gl/tCfg5). Very clever!\n  isPowerOf2: (num) => (num & (num - 1)) === 0, // twgl library\n\n  // Degrees & Radians\n  radians: (degrees) => degrees * Math.PI / 180,\n  degrees: (radians) => radians * 180 / Math.PI,\n\n  // Hypotenuse/distance from origin of point x,y\n  distance: (x, y) => Math.sqrt(x * x + y * y),\n\n  // Trims decimal digits of float to reduce size.\n  fixed (n, digits = 4) {\n    const p = Math.pow(10, digits)\n    return Math.round(n * p) / p\n  },\n\n  // Clamp a number to be between min/max.\n  // Much faster than Math.max(Math.min(v, max), min)\n  clamp (v, min, max) {\n    if (v < min) return min\n    if (v > max) return max\n    return v\n  },\n\n  // Return true is val in [min, max] enclusive\n  between: (val, min, max) => min <= val && val <= max,\n\n  // Return a linear interpolation between lo and hi.\n  // Scale is in [0-1], a percentage, and the result is in [lo,hi]\n  // If lo>hi, scaling is from hi end of range.\n  // [Why the name `lerp`?](http://goo.gl/QrzMc)\n  lerp: (lo, hi, scale) =>\n    lo <= hi ? lo + (hi - lo) * scale : lo - (lo - hi) * scale,\n  // Calculate the lerp scale given lo/hi pair and a number between them.\n  lerpScale: (number, lo, hi) => (number - lo) / (hi - lo),\n\n  // ### Arrays, Objects and Iteration ###\n\n  // Shim for Object.setPrototypeOf for legacy use.\n  // Support for __proto__ currently greater, oddly enough.\n  setPrototypeOf (obj, prototype) {\n    if (Object.setPrototypeOf)\n      Object.setPrototypeOf(obj, prototype)\n    else\n      obj.__proto__ = prototype // eslint-disable-line\n    return obj\n  },\n\n  // Execute fcn for all own member of an obj or array (typed OK).\n  // - Unlike forEach, does not skip undefines.\n  // - Like map, forEach, etc, fcn = fcn(item, key/index, obj).\n  forAll (arrayOrObj, fcn) {\n    if (arrayOrObj.slice) // typed & std arrays\n      for (let i = 0, len = arrayOrObj.length; i < len; i++)\n        fcn(arrayOrObj[i], i, arrayOrObj)\n    else\n      Object.keys(arrayOrObj).forEach((k) => fcn(arrayOrObj[k], k, arrayOrObj))\n    return arrayOrObj\n  },\n\n  // Repeat function f(i) n times, n in 0, i-1\n  repeat (n, f) { for (let i = 0; i < n; i++) f(i) },\n  // Repeat function n/step times, incrementing i by step each step.\n  step (n, step, f) { for (let i = 0; i < n; i += step) f(i) },\n\n  // Return a new copy of array, with correct type.\n  copyArray (array) {\n    if (array.constructor === Array) return array.slice(0)\n    return new array.constructor(array)\n  },\n\n  // Return a new array that is the concatination two arrays.\n  // The resulting type is that of the first array.\n  concatArrays (array1, array2) {\n    const Type = array1.constructor\n    if (Type === Array)\n      return array1.concat(this.convertArray(array2, Array))\n    const array = new Type(array1.length + array2.length)\n    // Note typedArray.set() allows any Array or TypedArray array.\n    array.set(array1); array.set(array2, array1.length)\n    return array\n  },\n\n  // Return array's type (Array or TypedArray variant)\n  arrayType (array) { return array.constructor },\n\n  // Return a new JavaScript Array of floats to a given precision.\n  // Fails for Float32Array due to float64->32 artifiacts, thus Array conversion\n  fixedArray (array, digits = 4) {\n    // const a = (array.constructor === Array) ?\n    //   array : Array.prototype.slice.call(array) // see https://goo.gl/UcIrGZ\n    // return a.map(n => util.fixed(n, digits))\n    return array.map((n) => util.fixed(n, digits))\n  },\n\n  // Shallow clome of obj or array\n  clone (obj) {\n    if (obj.slice) return obj.slice(0) // ok for TypedArrays\n    const result = {}\n    Object.keys(obj).forEach((k) => { result[k] = obj[k] })\n    return result\n  },\n\n  // [Deep clone](http://goo.gl/MIaTxU) an obj or array. Clever!\n  deepClone: (obj) => JSON.parse(JSON.stringify(obj)),\n\n  // Compare Objects or Arrays via JSON string. TypedArrays !== Arrays\n  objectsEqual: (a, b) => JSON.stringify(a) === JSON.stringify(b),\n\n  // Merge from's key/val pairs into to\n  // REMIND: use Object.assign\n  copyTo (toObj, fromObj) {\n    Object.keys(fromObj).forEach((k) => { toObj[k] = fromObj[k] })\n  },\n\n  // Returns new array (of this type) of unique elements in this *sorted* array.\n  // Sort or clone & sort if needed.\n  uniq (array) {\n    const f = (ai, i, a) => ai !== a[i - 1] // a[-1] ok, is undefined, no error\n    return array.filter(f)\n  },\n\n  // Create random array of floats between min/max.\n  // Array Type allows conversion to integers (Int32Array etc)\n  randomArray (length, min = 0, max = 1, Type = Array) {\n    const a = new Type(length)\n    for (let i = 0; i < length; i++) { a[i] = this.randomFloat2(min, max) }\n    return a\n  },\n\n  // Create an array of properties from an array of objects\n  propArray: (array, propName) => array.map((a) => a[propName]),\n\n  // Create a histogram, given an array, a bin size, and a\n  // min bin defaulting to min of of the array.\n  // Return an object with:\n  // - min/maxBin: the first/last bin with data\n  // - min/maxVal: the min/max values in the array\n  // - bins: the number of bins\n  // - hist: the array of bins\n  histogram (array, bin = 1, min = Math.floor(this.aMin(array))) {\n    const hist = []\n    let [minBin, maxBin] = [Number.MAX_VALUE, Number.MIN_VALUE]\n    let [minVal, maxVal] = [Number.MAX_VALUE, Number.MIN_VALUE]\n    for (const a of array) {\n      const i = Math.floor(a / bin) - min\n      hist[i] = (hist[i] === undefined) ? 1 : hist[i] + 1\n      minBin = Math.min(minBin, i)\n      maxBin = Math.max(maxBin, i)\n      minVal = Math.min(minVal, a)\n      maxVal = Math.max(maxVal, a)\n    }\n    for (const i in hist)\n      if (hist[i] === undefined) { hist[i] = 0 }\n    const bins = maxBin - minBin + 1\n    return { bins, minBin, maxBin, minVal, maxVal, hist }\n  },\n\n  // Return scalar max/min/sum/avg of numeric array.\n  // Works with es6 TypedArrays\n  aMax: (array) => array.reduce((a, b) => Math.max(a, b)),\n  aMin: (array) => array.reduce((a, b) => Math.min(a, b)),\n  aSum: (array) => array.reduce((a, b) => a + b),\n  aAvg: (array) => util.aSum(array) / array.length,\n\n  // You'd think this wasn't necessary, and I always forget. Damn.\n  // Note this, like sort, sorts in place. Clone array if needed.\n  sortNums (array, ascending = true) {\n    return array.sort((a, b) => ascending ? a - b : b - a)\n  },\n  // sort an array of objects w/ fcn(obj) as compareFunction.\n  // If fcn is a string, convert to propFcn.\n  // See [Fisher-Yates-Knuth shuffle](https://goo.gl/fWNFf) for better approach\n  sortObjs (array, fcn, ascending = true) {\n    if (typeof fcn === 'string') fcn = this.propFcn(fcn)\n    const comp = (a, b) => {\n      if (fcn(a) > fcn(b)) return 1\n      if (fcn(a) < fcn(b)) return -1\n      return 0\n    }\n    return array.sort((a, b) => ascending ? comp(a, b) : -comp(a, b))\n  },\n  // Randomize array in-place. Use clone() first if new array needed\n  // The array is returned for chaining; same as input array.\n  shuffle (array) { array.sort((a, b) => Math.random() < 0.5); return array },\n\n  // Return array composed of f(a1i, a2i) called pairwise on both arrays\n  aPairwise: (a1, a2, f) => a1.map((val, i) => f(val, a2[i])),\n  aPairSum: (a1, a2) => util.aPairwise(a1, a2, (a, b) => a + b),\n  aPairDif: (a1, a2) => util.aPairwise(a1, a2, (a, b) => a - b),\n  aPairMul: (a1, a2) => util.aPairwise(a1, a2, (a, b) => a * b),\n  aPairEq: (a1, a2) => util.aPairDif(a1, a2).every((a) => a === 0),\n\n  // Return a \"ramp\" (array of uniformly ascending/descending floats)\n  // in [start,stop] with numItems (positive integer > 1).\n  // OK for start>stop. Will always include start/stop w/in float accuracy.\n  aRamp (start, stop, numItems) {\n    // Note: start + step*i, where step is (stop-start)/(numItems-1),\n    // has float accuracy problems, must recalc step each iteration.\n    if (numItems <= 1) this.error('aRamp: numItems must be > 1')\n    const a = []\n    for (let i = 0; i < numItems; i++)\n      a.push(start + (stop - start) * (i / (numItems - 1)))\n    return a\n  },\n  // Integer version of aRamp, start & stop integers, rounding each element.\n  // Default numItems yields unit step between start & stop.\n  aIntRamp (start, stop, numItems = (Math.abs(stop - start) + 1)) {\n    return this.aRamp(start, stop, numItems).map(a => Math.round(a))\n  },\n\n  // Return an array normalized (lerp) between lo/hi values\n  normalize (array, lo = 0, hi = 1) {\n    const [min, max] = [this.aMin(array), this.aMax(array)]\n    const scale = 1 / (max - min)\n    return array.map((n) => this.lerp(lo, hi, scale * ((n) - min)))\n  },\n  // Return Uint8ClampedArray normalized in 0-255\n  normalize8 (array) {\n    return new Uint8ClampedArray(this.normalize(array, -0.5, 255.5))\n  },\n  // Return Array normalized to integers in lo-hi\n  normalizeInt (array, lo, hi) {\n    return this.normalize(array, lo, hi).map((n) => Math.round(n))\n  },\n\n  // ### Async ###\n\n  // Return Promise for getting an image.\n  // - use: imagePromise('./path/to/img').then(img => imageFcn(img))\n  imagePromise (url) {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      img.crossOrigin = 'Anonymous'\n      img.onload = () => resolve(img)\n      img.onerror = () => reject(`Could not load image ${url}`)\n      img.src = url\n    })\n  },\n  // Return Promise for ajax/xhr data.\n  // - type: 'arraybuffer', 'blob', 'document', 'json', 'text'.\n  // - method: 'GET', 'POST'\n  // - use: xhrPromise('./path/to/data').then(data => dataFcn(data))\n  xhrPromise (url, type = 'text', method = 'GET') {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest()\n      xhr.open(method, url) // POST mainly for security and large files\n      xhr.responseType = type\n      xhr.onload = () => resolve(xhr.response)\n      xhr.onerror = () => reject(xhr.responseText)\n      xhr.send()\n    })\n  },\n\n  // An [async/await](https://davidwalsh.name/async-generators)\n  // implementation using generators returning promises.\n  //\n  // runGenerator runs a generator which yields promises,\n  // returning the promise results when they complete.\n  // Amazingly enough, the returned promise result replaces the\n  // promise initially yielded by the generator function.\n  runGenerator (g) {\n    const it = g()\n    ;(function iterate (val) { // asynchronously iterate over generator\n      const ret = it.next(val)\n      if (!ret.done) {\n        ret.value.then(iterate) // wait on the promise\n      }\n    }())\n  },\n  // Used like this, main() is entirely sync:\n  // ```\n  // function* main() {\n  //   var path = 'http://s3.amazonaws.com/backspaces/'\n  //   var val1 = yield util.xhrPromise(path + 'lorem1.txt')\n  //   console.log( 'val1', val1 )\n  //   var val2 = yield util.xhrPromise(path + 'lorem2.txt')\n  //   console.log( 'val2', val2 )\n  // }\n  // util.runGenerator( main )\n  // ```\n\n  // ### Canvas/Image ###\n\n  // Get an image in this page by its ID\n  getCanvasByID: (id) => document.getElementById(id),\n  // Create a blank canvas of a given width/height\n  createCanvas (width, height) {\n    const can = document.createElement('canvas')\n    can.width = width; can.height = height\n    return can\n  },\n  // As above, but returing the context object.\n  // Note ctx.canvas is the canvas for the ctx, and can be use as an image.\n  createCtx (width, height, ctxType = '2d') {\n    const can = this.createCanvas(width, height)\n    return can.getContext(ctxType === '2d' ? '2d' : 'webgl')\n  },\n  // Return the ImageData object for this context object\n  ctxToImageData (ctx) {\n    return ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n  },\n  // Return an image/png base64 [dataUrl](https://goo.gl/fyBPnL)\n  // string for this ctx object.\n  ctxToDataUrl: (ctx) => ctx.canvas.toDataURL('image/png'),\n\n  // Convert a dataUrl back into am image.\n  dataUrlToImage (dataUrl) { // async in some browsers?? http://goo.gl/kIk2U\n    const img = new Image()\n    img.src = dataUrl\n    return img\n  },\n  // Return a ctx object for this base64 data url\n  dataUrlToCtx (dataUrl) { // async in some browsers?? http://goo.gl/kIk2U\n    const img = this.dataUrlToImage(dataUrl)\n    const ctx = this.createCtx(img.width, img.height)\n    ctx.drawImage(img, 0, 0)\n    return ctx\n  },\n\n  // Get element (i.e. canvas) relative x,y position from event/mouse position.\n  getEventXY (element, evt) { // http://goo.gl/356S91\n    const rect = element.getBoundingClientRect()\n    return { x: evt.clientX - rect.left, y: evt.clientY - rect.top }\n  },\n\n  // Convert an image to a context. img may be a canvas.\n  // - x, y are origin in image, default to 0, 0.\n  // - width, height are size of context, default to image's width, height\n  // - thus default is entire image\n  //\n  // Note: to convert a ctx to an \"image\" (drawImage) use ctx.canvas\n  imageToCtx (img, x = 0, y = 0, width = img.width, height = img.height) {\n    if ((x + width > img.width) || (y + height > img.height))\n      this.error('imageToCtx: parameters outside of image')\n    const ctx = this.createCtx(width, height)\n    ctx.drawImage(img, x, y, width, height, 0, 0, width, height)\n    return ctx\n  }\n\n}\n\nexport default util\n"]}